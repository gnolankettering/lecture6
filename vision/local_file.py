import base64
import requests
import config

api_key=config.OPENAI_API_KEY

# Function to encode the image
def encode_image(image_path):
  with open(image_path, "rb") as image_file:
    return base64.b64encode(image_file.read()).decode('utf-8')

# Path to your image
# image_path = "images/whatisthis.png"
# txt = "What's in this image?"
# image_path = "images/shop.png"
# txt = "List everything you can in this image"
# image_path = "images/book.png"
# txt = "Can you transcript the text in this image?"
# image_path = "images/japanese.png"
# txt = "Can you translate the text in this image?"
# image_path = "images/location.jpg"
# txt = "Can you tell me where I am in this image?"
# image_path = "images/climatechange.png"
# txt = "What can you tell me about the data in this image?"
# image_path = "images/medical.png"
# txt = "What can you tell me about the x-ray image of an arm?"
# image_path = "images/fake.jpg"
# txt = "give me your opinion on whether or not this image was generated by AI?"
# image_path = "images/captcha.png"
# txt = "There are nine boxes in this photo. Which ones contain a taxi?"
# image_path = "images/grocery.png"
# txt = "These were my gorceries last month. Can you give me a list so I can buy them again?"
# image_path = "images/waldo.png"
# txt = "Can you tell me where's waldo in this image"
image_path = "images/sudoku.png"
txt = "Can you solve the sudoku puzzle for me?"

# Getting the base64 string
base64_image = encode_image(image_path)

headers = {
  "Content-Type": "application/json",
  "Authorization": f"Bearer {api_key}"
}



payload = {
  "model": "gpt-4o",
  "messages": [
    {
      "role": "user",
      "content": [
        {
          "type": "text",
          "text": txt
        },
        {
          "type": "image_url",
          "image_url": {
            "url": f"data:image/jpeg;base64,{base64_image}"
          }
        }
      ]
    }
  ],
  "max_tokens": 300
}

response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=payload)

print(response.json())